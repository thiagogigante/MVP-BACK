openapi: 3.0.0
info:
  title: MVP-BACK-END
  version: 1.0.0
  description: |-
    Este projeto foi desenvolvido por alunos da Unifeso como ferramenta de avaliação da disciplina MVP Back-End Development do Curso de Tecnólogo em Análise e Desenvolvimento de Sistemas. Nele foi utilizado o conceito de MVP (Menor Produto Viável) onde o foco é a solução prática com desenvolvimento rápido e baixo custo.

    Links úteis:
    - [Repositório](https://github.com/thiagogigante/MVP-BACK/)

    Alunos:
    - Bruno Nunes - Mat. 06007464
    - Murilo Torres - Mat. 06007772
    - Thiago Andrade - Mat. 06007617
    - Thiago Pereira - Mat. 06007579
    - Vinícius Nunes - Mat. 06007628


paths:
  /user/login:
    post:
      summary: "Login do usuário"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login bem sucedido
          content:
            application/json:
              schema:
                type: string
                example: "Token JWT válido"
        '401':
          description: "Não autorizado"
  /user:
    get:
      summary: "Listagem de usuários"
      parameters:
        - name: authorization
          in: header
          required: true
          schema:
            type: string
            example: 'Token JWT válido'
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id: 
                      type: string
                    name:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    role:
                      type: string
                    createdAt:
                      type: string
        '401':
          description: "Não autorizado"
  /user/register:
    post:
      summary: Registro de novo usuário
      parameters:
        - name: authorization
          in: header
          required: true
          schema:
            type: string
            example: 'Token JWT válido'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Higor
                email:
                  type: string
                  example: higor@gmail.com
                password:
                  type: string
                  example: 12345678
                role:
                  type: string
                  example: admin
      responses:
        '200':
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                type: string
                example: Usuário criado com sucesso!
        '401':
          description: "Não autorizado"
  /scheduleConfig:
    get:
      summary: Configuração de horários de funcionamento
      responses:
        '200':
          description: Sucesso          
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    dayOfWeek: 
                      type: string
                      example: ["domingo", "segunda", "terca", "quarta", "quinta", "sexta", "sabado"]
                    isOpen:
                      type: boolean
                    timeSlots:
                      type: object
                      properties:
                        start:
                          type: string
                        end:
                          type: string
        '401':
          description: "Não autorizado"
  /scheduleConfig/update:
    put:
      summary: Alteração na configuração de horários de funcionamento
      parameters:
        - name: authorization
          in: header
          required: true
          schema:
            type: string
            example: 'Token JWT válido'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isOpen: 
                  type: boolean
                dayOfWeek:
                  type: string
                  example: terca
                hour_start:
                  type: string
                  example: "08:00"
                hour_finish:
                  type: string
                  example: "12:00"
      responses:
        '200':
          description: Configuração alterada
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    isOpen: 
                      type: boolean
                    dayOfWeek: 
                      type: string
                    timeSlots:
                      type: object
                      properties:
                        start:
                          type: string
                        end:
                          type: string
          
        '400':
          description: "Dia não informado."
        '401':
          description: "Não autorizado"
  /appointment/new:
    post:
      summary: Adicionar agendamento
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Bruno
                email:
                  type: string
                  example: bruno@teste.com
                phoneNumber:
                  type: string
                  example: 21987654321
                date:
                  type: string
                  example: "11/11/2024"
                time:
                  type: string
                  example: "16:00"
      responses:
        '200':
          description: Agendamento adicionado
        '409':
          description: Data e horário não disponível
  /appointment:
    get:
      summary: Listar agendamentos
      parameters:
        - name: authorization
          in: header
          required: true
          schema:
            type: string
            example: 'Token JWT válido'
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id: 
                      type: string
                    name:
                      type: string
                    email:
                      type: string
                    phoneNumber:
                      type: string
                    date:
                      type: string
                    time:
                      type: string
                    status:
                      type: string
        '401':
          description: "Não autorizado"